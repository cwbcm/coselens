png(paste(home, "/surv_curves_mod/", cancer_type, "_mod.png", sep=""), width = 900, height = 750, unit = "px")
tryCatch({
p <- ggsurvplot(this_fit, data = clinical_test_cancer, pval = T, conf.int = TRUE) + labs(title = paste("Survival Plot for Modules in", cancer_type))
print(p)
}, error = function(e) {
print(error)
})
dev.off()
} # end plotting
}# end mod2 if
# Log Rank Test
# fit1 <- survfit(surv_object_cancer ~ mod, data = clinical_test_cancer)
# this_log_rank_p <- surv_pvalue(fit1, data = clinical_test_cancer)$pval
all_cancer_res = rbind(all_cancer_res, this_res)
} else {
print(paste("Cancer Type", cancer_type, "did not have more than 1 module."))
}
}
}
all_cancer_res$q = p.adjust(all_cancer_res$`Pr(>|z|)`, method = "BH")
View(all_cancer_res)
View(all_cancer_res)
library("coselenss")
data("group1", package = "coselenss")  # mutations from patients with    mutations in APC
data("group2", package = "coselenss")  # mutations from patients without mutations in APC
coselenss_res = coselenss(group1, group2)
? tiff
? svg
View(gene_info)
# Load Packages
library(survival)
library(survminer)
library(dplyr)
library(ggplot2)
# Read in Survival and Mutation Data
home <- "C:/Users/miles/Downloads/data/"
clinical <- read.table(paste(home, "TCGA-CDR.tsv", sep=""), sep="\t", stringsAsFactors = FALSE,  header=TRUE)
clinical$type[which(clinical$type == "READ")] <- "COAD"
all_mutations <- read.table(paste(home, "/TCGA_mc3_reannotated_noHyperMut3000_MNVgood.txt", sep=""), stringsAsFactors = FALSE, header = FALSE)
all_mutations[which(all_mutations[,13] == "READ"),13] <- "COAD"
rht <- read.table(paste(home, "all_cond_drivers_ex_2_rht.txt", sep=""), sep="\t", stringsAsFactors = FALSE, fill=TRUE, header=TRUE)
# Remove Modifier and Low annotated mutations
all_mutations = all_mutations[which(! all_mutations$V10 %in% c("MODIFIER", "LOW")),]
# List of all the cancer types (warning: some are not present in our dataset) (removed LCML)
cancer_types <- c("LAML","ACC","BLCA","LGG","BRCA","CESC","CHOL","COAD","CNTL","ESCA","FPPP","GBM","HNSC","KICH","KIRC","KIRP","LIHC","LUAD","LUSC","DLBC","MESO","MISC","OV","PAAD","PCPG","PRAD","SARC","SKCM","STAD","TGCT","THYM","THCA","UCS","UCEC","UVM")
# surv_time <- as.numeric(clinical$days_to_death[which(! startsWith(clinical$days_to_death, "[") | startsWith(clinical$vital_status, "[") | clinical$days_to_death == "" | clinical$vital_status == "")])
# isAlive <- clinical$vital_status[which(! startsWith(clinical$days_to_death, "[") | startsWith(clinical$vital_status, "[") | clinical$days_to_death == "" | clinical$vital_status == "")]
clinical$isAlive <- as.numeric(clinical$vital_status == "Alive")
alive_i <- which(clinical$death_days_to == "N/A")
clinical$surv_time <- clinical$death_days_to
clinical$surv_time[alive_i] <- clinical$last_contact_days_to[which(clinical$death_days_to == "N/A")]
# Survival Curves for each combo
df1 <- data.frame()
df2 <- data.frame()
df_cox <- data.frame()
plot <- FALSE
doPlot = T
clinical_clean <- clinical[which( ! is.na(as.numeric(clinical$surv_time)) ),] # Deal with Special Cases Where Data Isn't Available - 55 special cases
for (i in 1:nrow(rht)) {
print(i)
gene1 <- rht$split_gene[i]
gene2 <- rht$gene_name[i]
cancer_type <- rht$cancer_type[i]
pat_w_gene1 <- unique(all_mutations[which(all_mutations[,7] == gene1),2])
pat_w_gene2 <- unique(all_mutations[which(all_mutations[,7] == gene2),2])
common <- c(pat_w_gene1, pat_w_gene2)
common <- common[duplicated(common)]
clinical_clean$hasCombo <- clinical_clean$bcr_patient_barcode %in% common
clinical_clean$hasGene1 <- clinical_clean$bcr_patient_barcode %in% pat_w_gene1
clinical_clean$hasGene2 <- clinical_clean$bcr_patient_barcode %in% pat_w_gene2
# clinical_clean$hasGene1NoGene2 <- clinical_clean$bcr_patient_barcode %in% pat_w_gene1 & ! clinical_clean$bcr_patient_barcode %in% pat_w_gene2
pat_w_gene1_no_gene2 <- clinical_clean$bcr_patient_barcode[which(clinical_clean$bcr_patient_barcode %in% pat_w_gene1 & ! clinical_clean$bcr_patient_barcode %in% pat_w_gene2)]
pat_w_gene2_no_gene1 <- clinical_clean$bcr_patient_barcode[which(clinical_clean$bcr_patient_barcode %in% pat_w_gene2 & ! clinical_clean$bcr_patient_barcode %in% pat_w_gene1)]
# # Test patients with the mutation in the split gene and NOT the 2nd gene vs
# # patients with the mutation in the split gene AND the 2nd gene.
# clinical_test <- clinical_clean[which(clinical_clean$hasGene1),]
# surv_object <- Surv(time = as.numeric(clinical_test$surv_time), event = !clinical_test$isAlive)
# clinical_test_cancer <- clinical_test[which( clinical_test$type == cancer_type  ),]
# if (length(common) > 0 && length(unique(clinical_test$hasCombo)) > 1) {
#   fit1 <- survfit(surv_object ~ hasCombo, data = clinical_test)
#   all_p <- surv_pvalue(fit1, data = clinical_test)$pval
#   all_pat_wo_combo <- fit1$strata[1]
#   all_pat_w_combo  <- fit1$strata[2]
#
#   if (plot) {
#     p <- ggsurvplot(fit1, data = clinical_test, pval = TRUE) + ggtitle(paste("Survival Plot for All Patients With", gene1, "and", gene2, "\nvs All Patients with just", gene1))
#     png(paste(home, "/surv_curves/", gene1, "_", gene2, "_", cancer_type, "_all.png", sep=""), width = 900, height = 450, unit = "px")
#     print(p)
#     dev.off()
#   }
# } else {
#   all_p <- "NA"
#   cancer_p <- "NA"
#   all_pat_wo_combo <- length(clinical_test)
#   all_pat_w_combo  <- 0
#   cancer_pat_wo_combo <- length(clinical_test_cancer)
#   cancer_pat_w_combo  <- 0
#   print("Special")
# }
#
# # Get Cancer Type Specific
# if (nrow(clinical_test_cancer) > 0 && length(unique(clinical_test_cancer$hasCombo)) > 1) {
#   surv_object_cancer <- Surv(time = as.numeric(clinical_test_cancer$surv_time), event = !clinical_test_cancer$isAlive)
#   fit_cancer <- survfit(surv_object_cancer ~ hasCombo, data = clinical_test_cancer)
#   cancer_p <- surv_pvalue(fit_cancer, data = clinical_test_cancer)$pval
#   cancer_pat_wo_combo <- fit_cancer$strat[1]
#   cancer_pat_w_combo <- fit_cancer$strat[2]
#
#   if (plot) {
#     png(paste(home, "/surv_curves/", gene1, "_", gene2, "_", cancer_type, "_only.png", sep=""), width = 900, height = 450, unit = "px")
#     p_cancer <- ggsurvplot(fit_cancer, data = clinical_test_cancer, pval = TRUE) + ggtitle(paste("Survival Plot for", cancer_type, "Patients With", gene1, "and", gene2, "\n vs", cancer_type, "Patients with just", gene1))
#     print(p_cancer)
#     dev.off()
#   }
# } else {
#   cancer_p <- "NA"
#   cancer_pat_wo_combo <- nrow(clinical_test_cancer)
#   cancer_pat_w_combo <- 0
# }
# newRow <- t(c(cancer_type, gene1, gene2, all_p, cancer_p, all_pat_wo_combo, all_pat_w_combo, cancer_pat_wo_combo, cancer_pat_w_combo))
# colnames(newRow) <- c("cancer_type", "split_gene", "gene_name", "all_p", "cancer_p", "all_pat_wo_combo", "all_pat_w_combo", "cancer_pat_wo_combo", "cancer_pat_w_combo")
# df1 <- rbind(df1, newRow)
# colnames(df1) <- c("cancer_type", "split_gene", "gene_name", "all_p", "cancer_p", "all_pat_wo_combo", "all_pat_w_combo", "cancer_pat_wo_combo", "cancer_pat_w_combo")
#
# #############################################################################
# # Test patients with the mutation in the 2nd gene and NOT the split gene vs #
# # patients with the mutation in the 2nd gene AND the split gene.            #
# #############################################################################
# clinical_test <- clinical_clean[which(clinical_clean$hasGene2),]
# surv_object <- Surv(time = as.numeric(clinical_test$surv_time), event = !clinical_test$isAlive)
# clinical_test_cancer <- clinical_test[which( clinical_test$type == cancer_type  ),]
# if (length(common) > 0 && length(unique(clinical_test$hasCombo)) > 1) {
#   fit2 <- survfit(surv_object ~ hasCombo, data = clinical_test)
#   all_p <- surv_pvalue(fit2, data = clinical_test)$pval
#   all_pat_wo_combo <- fit2$strata[1]
#   all_pat_w_combo  <- fit2$strata[2]
#
#   if (plot) {
#     p <- ggsurvplot(fit2, data = clinical_test, pval = TRUE) + ggtitle(paste("Survival Plot for All Patients With", gene1, "and", gene2, "\n vs All Patients with just", gene2))
#     png(paste(home, "/surv_curves/", gene1, "_", gene2, "_", cancer_type, "_2_all.png", sep=""), width = 900, height = 450, unit = "px")
#     print(p)
#     dev.off()
#   }
# } else {
#   all_p <- "NA"
#   cancer_p <- "NA"
#   all_pat_wo_combo <- length(clinical_test)
#   all_pat_w_combo  <- 0
#   cancer_pat_wo_combo <- length(clinical_test_cancer)
#   cancer_pat_w_combo  <- 0
#   print("Special")
# }
#
# # Get Cancer Type Specific
# if (nrow(clinical_test_cancer) > 0 && length(unique(clinical_test_cancer$hasCombo)) > 1) {
#   surv_object_cancer <- Surv(time = as.numeric(clinical_test_cancer$surv_time), event = !clinical_test_cancer$isAlive)
#   fit_cancer <- survfit(surv_object_cancer ~ hasCombo, data = clinical_test_cancer)
#   cancer_p <- surv_pvalue(fit_cancer, data = clinical_test_cancer)$pval
#   cancer_pat_wo_combo <- fit_cancer$strat[1]
#   cancer_pat_w_combo <- fit_cancer$strat[2]
#
#   if (plot) {
#     png(paste(home, "/surv_curves/", gene1, "_", gene2, "_", cancer_type, "_2_only.png", sep=""), width = 900, height = 450, unit = "px")
#     p_cancer <- ggsurvplot(fit_cancer, data = clinical_test_cancer, pval = TRUE)  + ggtitle(paste("Survival Plot for", cancer_type, "Patients With", gene1, "and", gene2, "\n vs", cancer_type, "Patients with just", gene2))
#     print(p_cancer)
#     dev.off()
#   }
# } else {
#   cancer_p <- "NA"
#   cancer_pat_wo_combo <- nrow(clinical_test_cancer)
#   cancer_pat_w_combo <- 0
# }
# newRow <- t(c(cancer_type, gene1, gene2, all_p, cancer_p, all_pat_wo_combo, all_pat_w_combo, cancer_pat_wo_combo, cancer_pat_w_combo))
# colnames(newRow) <- c("cancer_type", "split_gene", "gene_name", "all_p", "cancer_p", "all_pat_wo_combo", "all_pat_w_combo", "cancer_pat_wo_combo", "cancer_pat_w_combo")
# df2 <- rbind(df2, newRow)
# colnames(df2) <- c("cancer_type", "split_gene", "gene_name", "all_p", "cancer_p", "all_pat_wo_combo", "all_pat_w_combo", "cancer_pat_wo_combo", "cancer_pat_w_combo")
######################
# Cox (All Patients) #
######################
clinical_clean$hasCombo2 <- clinical_clean$hasCombo
clinical_clean$hasCombo2[which(clinical_clean$hasCombo2 == TRUE)]  <- "Y"
clinical_clean$hasCombo2[which(clinical_clean$hasCombo2 == FALSE)] <- "N"
clinical_test <- clinical_clean
# EDIT 05/23/2021
# Need to keep patients with only muts in gene1 only, muts in gene2 only, and muts in both.
clinical_test = clinical_test[which(clinical_test$hasCombo | clinical_test$hasGene1 | clinical_test$hasGene2),]
clinical_test$hasOnlyGene1 = clinical_test$hasGene1 & !clinical_test$hasGene2
clinical_test$hasOnlyGene2 = clinical_test$hasGene2 & !clinical_test$hasGene1
surv_object <- Surv(time = as.numeric(clinical_test$surv_time), event = !clinical_test$isAlive)
clinical_test_cancer <- clinical_test[which( clinical_test$type == cancer_type  ),]
if (length(common) > 0 && length(unique(clinical_test$hasCombo)) > 1) {
# Old
# fit_cox_all <- coxph(surv_object ~ hasCombo2 + hasGene1 + hasGene2, data = clinical_test)
# EDIT 05/23/2021
# Need only 2 covariates
fit_cox_all <- coxph(surv_object ~ hasOnlyGene1 + hasOnlyGene2, data = clinical_test)
fit_cox_all_sum <- summary(fit_cox_all)
# ggforest(fit_cox_all, data = clinical_test)
colnames(fit_cox_all_sum$coefficients)
fit_cox_all_3_p      <- unname(fit_cox_all_sum$coefficients[,5])
fit_cox_all_3_coef   <- unname(fit_cox_all_sum$coefficients[,1])
fit_cox_all_global_p <- unname(fit_cox_all_sum$logtest[3])
all_pat         <- nrow(clinical_test)
all_pat_w_gene1 <- length(which(clinical_test$hasOnlyGene1 == TRUE))
all_pat_w_gene2 <- length(which(clinical_test$hasOnlyGene2 == TRUE))
all_pat_w_combo <- length(which(clinical_test$hasCombo == TRUE))
} else {
fit_cox_all_3_p      <- c(NA, NA)
fit_cox_all_3_coef   <- c(NA, NA)
fit_cox_all_global_p <- 1
all_pat         <- nrow(clinical_test)
all_pat_w_gene1 <- length(which(clinical_test$hasOnlyGene1 == TRUE))
all_pat_w_gene2 <- length(which(clinical_test$hasOnlyGene2 == TRUE))
all_pat_w_combo <- length(which(clinical_test$hasCombo == TRUE))
}
if (nrow(clinical_test_cancer) > 0 && length(unique(clinical_test_cancer$hasCombo)) > 1) {
surv_object_cancer <- Surv(time = as.numeric(clinical_test_cancer$surv_time), event = !clinical_test_cancer$isAlive)
# Old
# fit_cox_cancer <- coxph(surv_object_cancer ~ hasCombo2 + hasGene1 + hasGene2, data = clinical_test_cancer)
# EDIT 05/23/2021
# Need only 2 covariates
fit_cox_cancer <- coxph(surv_object_cancer ~ hasOnlyGene1 + hasOnlyGene2, data = clinical_test_cancer)
fit_cox_cancer_sum <- summary(fit_cox_cancer)
# ggforest(fit_cox_cancer, data = clinical_test_cancer)
fit_cox_cancer_3_p      <- unname(fit_cox_cancer_sum$coefficients[,5])
fit_cox_cancer_3_coef   <- unname(fit_cox_cancer_sum$coefficients[,1])
fit_cox_cancer_global_p <- unname(fit_cox_cancer_sum$logtest[3])
cancer_pat         <- nrow(clinical_test_cancer)
cancer_pat_w_gene1 <- length(which(clinical_test_cancer$hasOnlyGene1 == TRUE))
cancer_pat_w_gene2 <- length(which(clinical_test_cancer$hasOnlyGene2 == TRUE))
cancer_pat_w_combo <- length(which(clinical_test_cancer$hasCombo == TRUE))
if (doPlot) {
this_fit <- survfit(surv_object_cancer ~ hasOnlyGene1 + hasOnlyGene2, data = clinical_test_cancer)
png(paste(home, "/surv_curves/", cancer_type, "_", gene1, "_", gene2, ".png", sep=""), width = 900, height = 750, unit = "px")
tryCatch({
p <- ggsurvplot(this_fit, data = clinical_test_cancer, palette = c("#70BC51", "#D949A2"),  pval = F, conf.int = TRUE) + labs(title = paste("Survival Plot for Modules in", cancer_type))
print(p)
}, error = function(e) {
print(error)
})
dev.off()
} # end plotting
} else {
fit_cox_cancer_3_p      <- c(NA, NA)
fit_cox_cancer_3_coef   <- c(NA, NA)
fit_cox_cancer_global_p <- 1
cancer_pat         <- nrow(clinical_test_cancer)
cancer_pat_w_gene1 <- length(which(clinical_test_cancer$hasOnlyGene1 == TRUE))
cancer_pat_w_gene2 <- length(which(clinical_test_cancer$hasOnlyGene2 == TRUE))
cancer_pat_w_combo <- length(which(clinical_test_cancer$hasCombo == TRUE))
}
newRow <- t(c(cancer_type, gene1, gene2, all_pat, all_pat_w_combo, all_pat_w_gene1, all_pat_w_gene2, cancer_pat, cancer_pat_w_combo, cancer_pat_w_gene1, cancer_pat_w_gene2, fit_cox_all_3_coef, fit_cox_cancer_3_coef, fit_cox_all_global_p, fit_cox_all_3_p, fit_cox_cancer_global_p, fit_cox_cancer_3_p))
df_cox <- rbind(df_cox, newRow)
}
colnames(df_cox) <- c("cancer_type", "split_gene_aka_gene1", "gene_name_aka_gene2", "num_all_pat", "all_pat_w_combo", "all_pat_w_gene1", "all_pat_w_gene2", "num_cancer_pat", "cancer_pat_w_combo", "cancer_pat_w_gene1", "cancer_pat_w_gene2", "all_gene1_coef", "all_gene2_coef", "cancer_gene1_coef", "cancer_gene2_coef", "all_global_p", "all_gene1_p", "all_gene2_p", "cancer_global_p", "cancer_gene1_p", "cancer_gene2_p")
doPlot
this_fit <- survfit(surv_object_cancer ~ hasOnlyGene1 + hasOnlyGene2, data = clinical_test_cancer)
p <- ggsurvplot(this_fit, data = clinical_test_cancer, palette = c("#70BC51", "#D949A2"),  pval = F, conf.int = TRUE) + labs(title = paste("Survival Plot for Modules in", cancer_type))
print(p)
p <- ggsurvplot(this_fit, data = clinical_test_cancer, palette = c("#70BC51", "#D949A2", "goldenrod1"),  pval = F, conf.int = TRUE) + labs(title = paste("Survival Plot for Modules in", cancer_type))
print(p)
dev.off()
dev.off()
print(p)
View(clinical_test_cancer)
p <- ggsurvplot(this_fit, data = clinical_test_cancer, palette = c("#70BC51", "#D949A2", "#951F68"),  pval = F, conf.int = TRUE) + labs(title = paste("Survival Plot for Modules in", cancer_type))
print(p)
# Survival Curves for each combo
df1 <- data.frame()
df2 <- data.frame()
df_cox <- data.frame()
plot <- FALSE
doPlot = T
clinical_clean <- clinical[which( ! is.na(as.numeric(clinical$surv_time)) ),] # Deal with Special Cases Where Data Isn't Available - 55 special cases
for (i in 1:nrow(rht)) {
print(i)
gene1 <- rht$split_gene[i]
gene2 <- rht$gene_name[i]
cancer_type <- rht$cancer_type[i]
pat_w_gene1 <- unique(all_mutations[which(all_mutations[,7] == gene1),2])
pat_w_gene2 <- unique(all_mutations[which(all_mutations[,7] == gene2),2])
common <- c(pat_w_gene1, pat_w_gene2)
common <- common[duplicated(common)]
clinical_clean$hasCombo <- clinical_clean$bcr_patient_barcode %in% common
clinical_clean$hasGene1 <- clinical_clean$bcr_patient_barcode %in% pat_w_gene1
clinical_clean$hasGene2 <- clinical_clean$bcr_patient_barcode %in% pat_w_gene2
# clinical_clean$hasGene1NoGene2 <- clinical_clean$bcr_patient_barcode %in% pat_w_gene1 & ! clinical_clean$bcr_patient_barcode %in% pat_w_gene2
pat_w_gene1_no_gene2 <- clinical_clean$bcr_patient_barcode[which(clinical_clean$bcr_patient_barcode %in% pat_w_gene1 & ! clinical_clean$bcr_patient_barcode %in% pat_w_gene2)]
pat_w_gene2_no_gene1 <- clinical_clean$bcr_patient_barcode[which(clinical_clean$bcr_patient_barcode %in% pat_w_gene2 & ! clinical_clean$bcr_patient_barcode %in% pat_w_gene1)]
# # Test patients with the mutation in the split gene and NOT the 2nd gene vs
# # patients with the mutation in the split gene AND the 2nd gene.
# clinical_test <- clinical_clean[which(clinical_clean$hasGene1),]
# surv_object <- Surv(time = as.numeric(clinical_test$surv_time), event = !clinical_test$isAlive)
# clinical_test_cancer <- clinical_test[which( clinical_test$type == cancer_type  ),]
# if (length(common) > 0 && length(unique(clinical_test$hasCombo)) > 1) {
#   fit1 <- survfit(surv_object ~ hasCombo, data = clinical_test)
#   all_p <- surv_pvalue(fit1, data = clinical_test)$pval
#   all_pat_wo_combo <- fit1$strata[1]
#   all_pat_w_combo  <- fit1$strata[2]
#
#   if (plot) {
#     p <- ggsurvplot(fit1, data = clinical_test, pval = TRUE) + ggtitle(paste("Survival Plot for All Patients With", gene1, "and", gene2, "\nvs All Patients with just", gene1))
#     png(paste(home, "/surv_curves/", gene1, "_", gene2, "_", cancer_type, "_all.png", sep=""), width = 900, height = 450, unit = "px")
#     print(p)
#     dev.off()
#   }
# } else {
#   all_p <- "NA"
#   cancer_p <- "NA"
#   all_pat_wo_combo <- length(clinical_test)
#   all_pat_w_combo  <- 0
#   cancer_pat_wo_combo <- length(clinical_test_cancer)
#   cancer_pat_w_combo  <- 0
#   print("Special")
# }
#
# # Get Cancer Type Specific
# if (nrow(clinical_test_cancer) > 0 && length(unique(clinical_test_cancer$hasCombo)) > 1) {
#   surv_object_cancer <- Surv(time = as.numeric(clinical_test_cancer$surv_time), event = !clinical_test_cancer$isAlive)
#   fit_cancer <- survfit(surv_object_cancer ~ hasCombo, data = clinical_test_cancer)
#   cancer_p <- surv_pvalue(fit_cancer, data = clinical_test_cancer)$pval
#   cancer_pat_wo_combo <- fit_cancer$strat[1]
#   cancer_pat_w_combo <- fit_cancer$strat[2]
#
#   if (plot) {
#     png(paste(home, "/surv_curves/", gene1, "_", gene2, "_", cancer_type, "_only.png", sep=""), width = 900, height = 450, unit = "px")
#     p_cancer <- ggsurvplot(fit_cancer, data = clinical_test_cancer, pval = TRUE) + ggtitle(paste("Survival Plot for", cancer_type, "Patients With", gene1, "and", gene2, "\n vs", cancer_type, "Patients with just", gene1))
#     print(p_cancer)
#     dev.off()
#   }
# } else {
#   cancer_p <- "NA"
#   cancer_pat_wo_combo <- nrow(clinical_test_cancer)
#   cancer_pat_w_combo <- 0
# }
# newRow <- t(c(cancer_type, gene1, gene2, all_p, cancer_p, all_pat_wo_combo, all_pat_w_combo, cancer_pat_wo_combo, cancer_pat_w_combo))
# colnames(newRow) <- c("cancer_type", "split_gene", "gene_name", "all_p", "cancer_p", "all_pat_wo_combo", "all_pat_w_combo", "cancer_pat_wo_combo", "cancer_pat_w_combo")
# df1 <- rbind(df1, newRow)
# colnames(df1) <- c("cancer_type", "split_gene", "gene_name", "all_p", "cancer_p", "all_pat_wo_combo", "all_pat_w_combo", "cancer_pat_wo_combo", "cancer_pat_w_combo")
#
# #############################################################################
# # Test patients with the mutation in the 2nd gene and NOT the split gene vs #
# # patients with the mutation in the 2nd gene AND the split gene.            #
# #############################################################################
# clinical_test <- clinical_clean[which(clinical_clean$hasGene2),]
# surv_object <- Surv(time = as.numeric(clinical_test$surv_time), event = !clinical_test$isAlive)
# clinical_test_cancer <- clinical_test[which( clinical_test$type == cancer_type  ),]
# if (length(common) > 0 && length(unique(clinical_test$hasCombo)) > 1) {
#   fit2 <- survfit(surv_object ~ hasCombo, data = clinical_test)
#   all_p <- surv_pvalue(fit2, data = clinical_test)$pval
#   all_pat_wo_combo <- fit2$strata[1]
#   all_pat_w_combo  <- fit2$strata[2]
#
#   if (plot) {
#     p <- ggsurvplot(fit2, data = clinical_test, pval = TRUE) + ggtitle(paste("Survival Plot for All Patients With", gene1, "and", gene2, "\n vs All Patients with just", gene2))
#     png(paste(home, "/surv_curves/", gene1, "_", gene2, "_", cancer_type, "_2_all.png", sep=""), width = 900, height = 450, unit = "px")
#     print(p)
#     dev.off()
#   }
# } else {
#   all_p <- "NA"
#   cancer_p <- "NA"
#   all_pat_wo_combo <- length(clinical_test)
#   all_pat_w_combo  <- 0
#   cancer_pat_wo_combo <- length(clinical_test_cancer)
#   cancer_pat_w_combo  <- 0
#   print("Special")
# }
#
# # Get Cancer Type Specific
# if (nrow(clinical_test_cancer) > 0 && length(unique(clinical_test_cancer$hasCombo)) > 1) {
#   surv_object_cancer <- Surv(time = as.numeric(clinical_test_cancer$surv_time), event = !clinical_test_cancer$isAlive)
#   fit_cancer <- survfit(surv_object_cancer ~ hasCombo, data = clinical_test_cancer)
#   cancer_p <- surv_pvalue(fit_cancer, data = clinical_test_cancer)$pval
#   cancer_pat_wo_combo <- fit_cancer$strat[1]
#   cancer_pat_w_combo <- fit_cancer$strat[2]
#
#   if (plot) {
#     png(paste(home, "/surv_curves/", gene1, "_", gene2, "_", cancer_type, "_2_only.png", sep=""), width = 900, height = 450, unit = "px")
#     p_cancer <- ggsurvplot(fit_cancer, data = clinical_test_cancer, pval = TRUE)  + ggtitle(paste("Survival Plot for", cancer_type, "Patients With", gene1, "and", gene2, "\n vs", cancer_type, "Patients with just", gene2))
#     print(p_cancer)
#     dev.off()
#   }
# } else {
#   cancer_p <- "NA"
#   cancer_pat_wo_combo <- nrow(clinical_test_cancer)
#   cancer_pat_w_combo <- 0
# }
# newRow <- t(c(cancer_type, gene1, gene2, all_p, cancer_p, all_pat_wo_combo, all_pat_w_combo, cancer_pat_wo_combo, cancer_pat_w_combo))
# colnames(newRow) <- c("cancer_type", "split_gene", "gene_name", "all_p", "cancer_p", "all_pat_wo_combo", "all_pat_w_combo", "cancer_pat_wo_combo", "cancer_pat_w_combo")
# df2 <- rbind(df2, newRow)
# colnames(df2) <- c("cancer_type", "split_gene", "gene_name", "all_p", "cancer_p", "all_pat_wo_combo", "all_pat_w_combo", "cancer_pat_wo_combo", "cancer_pat_w_combo")
######################
# Cox (All Patients) #
######################
clinical_clean$hasCombo2 <- clinical_clean$hasCombo
clinical_clean$hasCombo2[which(clinical_clean$hasCombo2 == TRUE)]  <- "Y"
clinical_clean$hasCombo2[which(clinical_clean$hasCombo2 == FALSE)] <- "N"
clinical_test <- clinical_clean
# EDIT 05/23/2021
# Need to keep patients with only muts in gene1 only, muts in gene2 only, and muts in both.
clinical_test = clinical_test[which(clinical_test$hasCombo | clinical_test$hasGene1 | clinical_test$hasGene2),]
clinical_test$hasOnlyGene1 = clinical_test$hasGene1 & !clinical_test$hasGene2
clinical_test$hasOnlyGene2 = clinical_test$hasGene2 & !clinical_test$hasGene1
surv_object <- Surv(time = as.numeric(clinical_test$surv_time), event = !clinical_test$isAlive)
clinical_test_cancer <- clinical_test[which( clinical_test$type == cancer_type  ),]
if (length(common) > 0 && length(unique(clinical_test$hasCombo)) > 1) {
# Old
# fit_cox_all <- coxph(surv_object ~ hasCombo2 + hasGene1 + hasGene2, data = clinical_test)
# EDIT 05/23/2021
# Need only 2 covariates
fit_cox_all <- coxph(surv_object ~ hasOnlyGene1 + hasOnlyGene2, data = clinical_test)
fit_cox_all_sum <- summary(fit_cox_all)
# ggforest(fit_cox_all, data = clinical_test)
colnames(fit_cox_all_sum$coefficients)
fit_cox_all_3_p      <- unname(fit_cox_all_sum$coefficients[,5])
fit_cox_all_3_coef   <- unname(fit_cox_all_sum$coefficients[,1])
fit_cox_all_global_p <- unname(fit_cox_all_sum$logtest[3])
all_pat         <- nrow(clinical_test)
all_pat_w_gene1 <- length(which(clinical_test$hasOnlyGene1 == TRUE))
all_pat_w_gene2 <- length(which(clinical_test$hasOnlyGene2 == TRUE))
all_pat_w_combo <- length(which(clinical_test$hasCombo == TRUE))
} else {
fit_cox_all_3_p      <- c(NA, NA)
fit_cox_all_3_coef   <- c(NA, NA)
fit_cox_all_global_p <- 1
all_pat         <- nrow(clinical_test)
all_pat_w_gene1 <- length(which(clinical_test$hasOnlyGene1 == TRUE))
all_pat_w_gene2 <- length(which(clinical_test$hasOnlyGene2 == TRUE))
all_pat_w_combo <- length(which(clinical_test$hasCombo == TRUE))
}
if (nrow(clinical_test_cancer) > 0 && length(unique(clinical_test_cancer$hasCombo)) > 1) {
surv_object_cancer <- Surv(time = as.numeric(clinical_test_cancer$surv_time), event = !clinical_test_cancer$isAlive)
# Old
# fit_cox_cancer <- coxph(surv_object_cancer ~ hasCombo2 + hasGene1 + hasGene2, data = clinical_test_cancer)
# EDIT 05/23/2021
# Need only 2 covariates
fit_cox_cancer <- coxph(surv_object_cancer ~ hasOnlyGene1 + hasOnlyGene2, data = clinical_test_cancer)
fit_cox_cancer_sum <- summary(fit_cox_cancer)
# ggforest(fit_cox_cancer, data = clinical_test_cancer)
fit_cox_cancer_3_p      <- unname(fit_cox_cancer_sum$coefficients[,5])
fit_cox_cancer_3_coef   <- unname(fit_cox_cancer_sum$coefficients[,1])
fit_cox_cancer_global_p <- unname(fit_cox_cancer_sum$logtest[3])
cancer_pat         <- nrow(clinical_test_cancer)
cancer_pat_w_gene1 <- length(which(clinical_test_cancer$hasOnlyGene1 == TRUE))
cancer_pat_w_gene2 <- length(which(clinical_test_cancer$hasOnlyGene2 == TRUE))
cancer_pat_w_combo <- length(which(clinical_test_cancer$hasCombo == TRUE))
if (doPlot) {
this_fit <- survfit(surv_object_cancer ~ hasOnlyGene1 + hasOnlyGene2, data = clinical_test_cancer)
png(paste(home, "/surv_curves/", cancer_type, "_", gene1, "_", gene2, ".png", sep=""), width = 900, height = 750, unit = "px")
tryCatch({
p <- ggsurvplot(this_fit, data = clinical_test_cancer, palette = c("#70BC51", "#D949A2", "#951F68"),  pval = F, conf.int = TRUE) + labs(title = paste("Survival Plot for Modules in", cancer_type))
print(p)
}, error = function(e) {
print(error)
})
dev.off()
} # end plotting
} else {
fit_cox_cancer_3_p      <- c(NA, NA)
fit_cox_cancer_3_coef   <- c(NA, NA)
fit_cox_cancer_global_p <- 1
cancer_pat         <- nrow(clinical_test_cancer)
cancer_pat_w_gene1 <- length(which(clinical_test_cancer$hasOnlyGene1 == TRUE))
cancer_pat_w_gene2 <- length(which(clinical_test_cancer$hasOnlyGene2 == TRUE))
cancer_pat_w_combo <- length(which(clinical_test_cancer$hasCombo == TRUE))
}
newRow <- t(c(cancer_type, gene1, gene2, all_pat, all_pat_w_combo, all_pat_w_gene1, all_pat_w_gene2, cancer_pat, cancer_pat_w_combo, cancer_pat_w_gene1, cancer_pat_w_gene2, fit_cox_all_3_coef, fit_cox_cancer_3_coef, fit_cox_all_global_p, fit_cox_all_3_p, fit_cox_cancer_global_p, fit_cox_cancer_3_p))
df_cox <- rbind(df_cox, newRow)
}
colnames(df_cox) <- c("cancer_type", "split_gene_aka_gene1", "gene_name_aka_gene2", "num_all_pat", "all_pat_w_combo", "all_pat_w_gene1", "all_pat_w_gene2", "num_cancer_pat", "cancer_pat_w_combo", "cancer_pat_w_gene1", "cancer_pat_w_gene2", "all_gene1_coef", "all_gene2_coef", "cancer_gene1_coef", "cancer_gene2_coef", "all_global_p", "all_gene1_p", "all_gene2_p", "cancer_global_p", "cancer_gene1_p", "cancer_gene2_p")
colnames(df_cox) <- c("cancer_type", "split_gene_aka_gene1", "gene_name_aka_gene2", "num_all_pat", "all_pat_w_combo", "all_pat_w_gene1", "all_pat_w_gene2", "num_cancer_pat", "cancer_pat_w_combo", "cancer_pat_w_gene1", "cancer_pat_w_gene2", "all_gene1_coef", "all_gene2_coef", "cancer_gene1_coef", "cancer_gene2_coef", "all_global_p", "all_gene1_p", "all_gene2_p", "cancer_global_p", "cancer_gene1_p", "cancer_gene2_p")
df1$all_q <- p.adjust(as.vector(df1$all_p))
df1$cancer_q <- p.adjust(as.vector(df1$cancer_p))
df2$all_q <- p.adjust(as.vector(df2$all_p))
df2$cancer_q <- p.adjust(as.vector(df2$cancer_p))
df_cox$all_global_q <- p.adjust(as.numeric(as.vector(df_cox$all_global_p)), method = "BH")
df_cox$all_gene1_q  <- p.adjust(as.numeric(as.vector(df_cox$all_gene1_p)), method = "BH")
df_cox$all_gene2_q  <- p.adjust(as.numeric(as.vector(df_cox$all_gene2_p)), method = "BH")
df_cox$cancer_global_q <- p.adjust(as.numeric(as.vector(df_cox$cancer_global_p)), method = "BH")
df_cox$cancer_gene1_q  <- p.adjust(as.numeric(as.vector(df_cox$cancer_gene1_p)), method = "BH")
df_cox$cancer_gene2_q  <- p.adjust(as.numeric(as.vector(df_cox$cancer_gene2_p)), method = "BH")
write.table(df_cox, paste(home, "/surv_table_cox_070521.tsv", sep=""), sep="\t", quote = FALSE, col.names = TRUE, row.names = FALSE)
View(df_cox)
? geom_raster
remove.packages("coselenss", lib="~/R/win-library/4.1")
devtools::document()
setwd("~/coselenss/")
devtools::document()
cancer_genes <- scan(paste(pan, "data/369_plus_cancer_type_significant.txt", sep=""), character()) # read in cancer_genes
cancer_genes <- scan(paste(home, "data/369_plus_cancer_type_significant.txt", sep=""), character()) # read in cancer_genes
cancer_genes <- scan(paste(home, "/369_plus_cancer_type_significant.txt", sep=""), character()) # read in cancer_genes
save(cancer_genes, file = "~/coselenss/data/cancer_genes.rda")
cancer_genes = NULL
load("~/coselenss/data/cancer_genes.rda")
devtools::install_github("ggruenhagen3/coselenss")
detach("coselenss")
sessionInfo()
detach("coselenss")
devtools::install_github("ggruenhagen3/coselenss")
setwd("~/coselenss/")
devtools::document()
devtools::install()
library("coselenss")
detach("package:coselenss", unload = TRUE)
detach("package:coselens", unload = TRUE)
library(coselens)
data("group1", package = "coselens")
data("group2", package = "coselens")
data("cancer_genes", package = "coselens")
coselens_res = coselens(group1, group2, subset.genes.by = cancer_genes)
head(coselens_res)
